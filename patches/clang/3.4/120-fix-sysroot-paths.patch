From b63af020adc963d274176919945705e99e40b16f Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Wed, 13 Nov 2013 18:04:57 +0000
Subject: [PATCH 2/5] fix sysroot paths

---
 lib/Driver/Driver.cpp | 15 +++++++++++++++
 lib/Driver/Tools.cpp  | 15 +++++++++++++++
 2 files changed, 30 insertions(+)

diff --git a/lib/Driver/Driver.cpp b/lib/Driver/Driver.cpp
index 5307910..489beb3 100644
--- a/lib/Driver/Driver.cpp
+++ b/lib/Driver/Driver.cpp
@@ -45,6 +45,10 @@ using namespace clang::driver;
 using namespace clang;
 using namespace llvm::opt;
 
+static llvm::Triple computeTargetTriple(StringRef DefaultTargetTriple,
+                                        const ArgList &Args,
+                                        StringRef DarwinArchName);
+
 Driver::Driver(StringRef ClangExecutable,
                StringRef DefaultTargetTriple,
                StringRef DefaultImageName,
@@ -353,6 +357,17 @@ Compilation *Driver::BuildCompilation(ArrayRef<const char *> ArgList) {
   }
   if (const Arg *A = Args->getLastArg(options::OPT__sysroot_EQ))
     SysRoot = A->getValue();
+  else if (const Arg *A = Args->getLastArg(options::OPT_isysroot)) {
+    SysRoot = A->getValue();
+  } else {
+      if (!Dir.empty()) {
+        SmallString<128> P = llvm::sys::path::filename(Dir);
+        llvm::sys::path::remove_filename(P); // Remove /bin from foo/bin
+        llvm::sys::path::append(P,this->Prefix);
+        llvm::sys::path::append(P,"sysroot");
+        SysRoot = P.str();
+      }
+  }
   if (const Arg *A = Args->getLastArg(options::OPT__dyld_prefix_EQ))
     DyldPrefix = A->getValue();
   if (Args->hasArg(options::OPT_nostdlib))
diff --git a/lib/Driver/Tools.cpp b/lib/Driver/Tools.cpp
index ceef90f..9d9c828 100644
--- a/lib/Driver/Tools.cpp
+++ b/lib/Driver/Tools.cpp
@@ -2029,6 +2029,12 @@ void Clang::ConstructJob(Compilation &C, const JobAction &JA,
   std::string TripleStr = getToolChain().ComputeEffectiveClangTriple(Args);
   CmdArgs.push_back(Args.MakeArgString(TripleStr));
 
+  // Set sysroot
+  if(!D.SysRoot.empty()) {
+    CmdArgs.push_back("-isysroot");
+    CmdArgs.push_back(Args.MakeArgString(D.SysRoot));
+  }
+
   // Select the appropriate action.
   RewriteKind rewriteKind = RK_None;
   
@@ -4831,6 +4837,15 @@ void darwin::Link::AddLinkArgs(Compilation &C,
     CmdArgs.push_back(A->getValue());
   }
 
+  std::string libPath;
+  bool Exists;
+  //libPath = D.Dir + "/../lib/gcc/" + D.Prefix + "/4.2.1";
+  //if (!llvm::sys::fs::exists(libPath, Exists) && Exists)
+  //  CmdArgs.push_back(Args.MakeArgString("-L" + libPath));
+  libPath = D.SysRoot + "/usr/lib/gcc/" + D.Prefix + "/4.2.1";
+  if (!llvm::sys::fs::exists(libPath, Exists) && Exists)
+    CmdArgs.push_back(Args.MakeArgString("-L" + libPath));
+
   Args.AddLastArg(CmdArgs, options::OPT_twolevel__namespace);
   Args.AddLastArg(CmdArgs, options::OPT_twolevel__namespace__hints);
   Args.AddAllArgs(CmdArgs, options::OPT_umbrella);
-- 
1.8.5.rc2

