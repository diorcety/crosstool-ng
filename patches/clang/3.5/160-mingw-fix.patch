From 7f1043c62419058d3b00faa08b05b0050f7d41e1 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Thu, 14 Nov 2013 13:30:18 +0000
Subject: [PATCH 5/5] mingw fix

---
 include/clang/Driver/ToolChain.h  |  2 ++
 lib/Driver/ToolChain.cpp          | 23 +++++++++++++++++++++++
 lib/Driver/Tools.cpp              |  3 +++
 lib/Frontend/InitHeaderSearch.cpp |  8 +-------
 4 files changed, 29 insertions(+), 7 deletions(-)

diff --git a/include/clang/Driver/ToolChain.h b/include/clang/Driver/ToolChain.h
index fe3ba65..fdfab40 100644
--- a/include/clang/Driver/ToolChain.h
+++ b/include/clang/Driver/ToolChain.h
@@ -125,6 +125,8 @@ public:
                                      llvm::opt::ArgStringList &CmdArgs) const;
   virtual void AddIncludeSearchPathArgs(const llvm::opt::ArgList &Args,
                                         llvm::opt::ArgStringList &CmdArgs) const;
+  virtual void AddCPlusPlusIncludeSearchPathArgs(const llvm::opt::ArgList &Args,
+                                                 llvm::opt::ArgStringList &CmdArgs) const;
 
   path_list &getFilePaths() { return FilePaths; }
   const path_list &getFilePaths() const { return FilePaths; }
diff --git a/lib/Driver/ToolChain.cpp b/lib/Driver/ToolChain.cpp
index 1619079..9f5f6f7 100644
--- a/lib/Driver/ToolChain.cpp
+++ b/lib/Driver/ToolChain.cpp
@@ -160,6 +160,29 @@ void ToolChain::AddIncludeSearchPathArgs(const ArgList &Args, ArgStringList &Cmd
   CmdArgs.push_back(Args.MakeArgString("-I" + P.str()));
 }
 
+void ToolChain::AddCPlusPlusIncludeSearchPathArgs(const llvm::opt::ArgList &Args, ArgStringList &CmdArgs) const {
+  std::string GccVersion(CLANG_GCC_VERSION_STR);
+
+  // Checks
+  if (getDriver().Dir.empty() || GccVersion.empty()) {
+    return;
+  }
+
+  SmallString<128> P(getDriver().Dir);
+  llvm::sys::path::remove_filename(P); // Remove /bin from foo/bin
+  llvm::sys::path::append(P, "lib/gcc", getDriver().Prefix, GccVersion);
+  llvm::sys::path::append(P, "../../../..", getDriver().Prefix, "/include/c++/", GccVersion);
+
+  SmallString<128> PT(P);
+  SmallString<128> PB(P);
+
+  llvm::sys::path::append(PT, getDriver().Prefix);
+  llvm::sys::path::append(PB, "backward");
+  CmdArgs.push_back(Args.MakeArgString("-I" + P.str()));
+  CmdArgs.push_back(Args.MakeArgString("-I" + PT.str()));
+  CmdArgs.push_back(Args.MakeArgString("-I" + PB.str()));
+}
+
 void ToolChain::AddLinkSearchPathArgs(const llvm::opt::ArgList &Args, ArgStringList &CmdArgs) const {
   std::string GccVersion(CLANG_GCC_VERSION_STR);
 
diff --git a/lib/Driver/Tools.cpp b/lib/Driver/Tools.cpp
index 18d4749..a0c6876 100644
--- a/lib/Driver/Tools.cpp
+++ b/lib/Driver/Tools.cpp
@@ -2769,6 +2769,9 @@ void Clang::ConstructJob(Compilation &C, const JobAction &JA,
   if (isa<LinkJobAction>(JA)) {
      getToolChain().AddLinkSearchPathArgs(Args, CmdArgs);
   } else {
+     if (types::isCXX(InputType)) {
+       getToolChain().AddCPlusPlusIncludeSearchPathArgs(Args, CmdArgs);
+     }
      getToolChain().AddIncludeSearchPathArgs(Args, CmdArgs);
   }
 
diff --git a/lib/Frontend/InitHeaderSearch.cpp b/lib/Frontend/InitHeaderSearch.cpp
index d144cbb..495a0ce 100644
--- a/lib/Frontend/InitHeaderSearch.cpp
+++ b/lib/Frontend/InitHeaderSearch.cpp
@@ -312,14 +312,8 @@ void InitHeaderSearch::AddDefaultCIncludePaths(const llvm::Triple &triple,
     break;
   case llvm::Triple::MinGW32: { 
       // mingw-w64 crt include paths
-      // <sysroot>/i686-w64-mingw32/include
       SmallString<128> P = StringRef(HSOpts.ResourceDir);
-      llvm::sys::path::append(P, "../../../i686-w64-mingw32/include");
-      AddPath(P.str(), System, false);
-
-      // <sysroot>/x86_64-w64-mingw32/include
-      P.resize(HSOpts.ResourceDir.size());
-      llvm::sys::path::append(P, "../../../x86_64-w64-mingw32/include");
+      llvm::sys::path::append(P, "../../../" + triple.getTriple() + "include"); // <sysroot>/i686-w64-mingw32/include
       AddPath(P.str(), System, false);
 
       // mingw.org crt include paths
-- 
1.8.5.rc2

