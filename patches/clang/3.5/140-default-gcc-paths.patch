From 6a55036b37c374e6526208995200233977b7a320 Mon Sep 17 00:00:00 2001
From: Ray Donnelly <mingw.android@gmail.com>
Date: Wed, 13 Nov 2013 18:10:54 +0000
Subject: [PATCH 4/5] default gcc paths

---
 include/clang/Driver/ToolChain.h |  5 +++++
 lib/Driver/ToolChain.cpp         | 39 +++++++++++++++++++++++++++++++++++++++
 lib/Driver/Tools.cpp             |  6 ++++++
 3 files changed, 50 insertions(+)

diff --git a/include/clang/Driver/ToolChain.h b/include/clang/Driver/ToolChain.h
index 12bce28..fe3ba65 100644
--- a/include/clang/Driver/ToolChain.h
+++ b/include/clang/Driver/ToolChain.h
@@ -121,6 +121,11 @@ public:
     return Triple.getTriple();
   }
 
+  virtual void AddLinkSearchPathArgs(const llvm::opt::ArgList &Args,
+                                     llvm::opt::ArgStringList &CmdArgs) const;
+  virtual void AddIncludeSearchPathArgs(const llvm::opt::ArgList &Args,
+                                        llvm::opt::ArgStringList &CmdArgs) const;
+
   path_list &getFilePaths() { return FilePaths; }
   const path_list &getFilePaths() const { return FilePaths; }
 
diff --git a/lib/Driver/ToolChain.cpp b/lib/Driver/ToolChain.cpp
index cb8d25b..1619079 100644
--- a/lib/Driver/ToolChain.cpp
+++ b/lib/Driver/ToolChain.cpp
@@ -25,6 +25,13 @@ using namespace clang::driver;
 using namespace clang;
 using namespace llvm::opt;
 
+#define CLANG_STRINGIFY(x) #x
+#define CLANG_TOSTRING(x) CLANG_STRINGIFY(x)
+#ifndef CLANG_GCC_VERSION
+#define CLANG_GCC_VERSION
+#endif
+#define CLANG_GCC_VERSION_STR CLANG_TOSTRING(CLANG_GCC_VERSION)
+
 ToolChain::ToolChain(const Driver &D, const llvm::Triple &T,
                      const ArgList &A)
   : D(D), Triple(T), Args(A) {
@@ -137,6 +144,38 @@ Tool *ToolChain::SelectTool(const JobAction &JA) const {
   return getTool(AC);
 }
 
+void ToolChain::AddIncludeSearchPathArgs(const ArgList &Args, ArgStringList &CmdArgs) const {
+  std::string GccVersion(CLANG_GCC_VERSION_STR);
+
+  // Checks
+  if (getDriver().Dir.empty() || GccVersion.empty()) {
+    return;
+  }
+
+  SmallString<128> P(getDriver().Dir);
+  llvm::sys::path::remove_filename(P); // Remove /bin from foo/bin
+  llvm::sys::path::append(P, "lib/gcc", getDriver().Prefix, GccVersion);
+  llvm::sys::path::append(P, "../../../..", getDriver().Prefix, "include");
+
+  CmdArgs.push_back(Args.MakeArgString("-I" + P.str()));
+}
+
+void ToolChain::AddLinkSearchPathArgs(const llvm::opt::ArgList &Args, ArgStringList &CmdArgs) const {
+  std::string GccVersion(CLANG_GCC_VERSION_STR);
+
+  // Checks
+  if (getDriver().Dir.empty() || GccVersion.empty()) {
+    return;
+  }
+
+  SmallString<128> P(getDriver().Dir);
+  llvm::sys::path::remove_filename(P); // Remove /bin from foo/bin
+  llvm::sys::path::append(P, "lib/gcc", getDriver().Prefix, GccVersion);
+  llvm::sys::path::append(P, "../../../..", getDriver().Prefix, "lib");
+
+  CmdArgs.push_back(Args.MakeArgString("-L" + P.str()));
+}
+
 std::string ToolChain::GetFilePath(const char *Name) const {
   return D.GetFilePath(Name, *this);
 
diff --git a/lib/Driver/Tools.cpp b/lib/Driver/Tools.cpp
index 9d9c828..18d4749 100644
--- a/lib/Driver/Tools.cpp
+++ b/lib/Driver/Tools.cpp
@@ -2766,6 +2766,12 @@ void Clang::ConstructJob(Compilation &C, const JobAction &JA,
   // preprocessed inputs and configure concludes that -fPIC is not supported.
   Args.ClaimAllArgs(options::OPT_D);
 
+  if (isa<LinkJobAction>(JA)) {
+     getToolChain().AddLinkSearchPathArgs(Args, CmdArgs);
+  } else {
+     getToolChain().AddIncludeSearchPathArgs(Args, CmdArgs);
+  }
+
   // Manually translate -O4 to -O3; let clang reject others.
   if (Arg *A = Args.getLastArg(options::OPT_O_Group)) {
     if (A->getOption().matches(options::OPT_O4)) {
-- 
1.8.5.rc2

